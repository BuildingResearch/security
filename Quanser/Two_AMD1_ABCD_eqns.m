% Matlab equation file: "Two_AMD1_ABCD_eqns.m"
% Open-Loop State-Space Matrices: A, B, C, and D
% for the Quanser Two-Floor Active Mass Damper with Two Carts (2xAMD-1) Experiment.

A( 1, 1 ) = 0;
A( 1, 2 ) = 0;
A( 1, 3 ) = 0;
A( 1, 4 ) = 0;
A( 1, 5 ) = 1;
A( 1, 6 ) = 0;
A( 1, 7 ) = 0;
A( 1, 8 ) = 0;
A( 2, 1 ) = 0;
A( 2, 2 ) = 0;
A( 2, 3 ) = 0;
A( 2, 4 ) = 0;
A( 2, 5 ) = 0;
A( 2, 6 ) = 1;
A( 2, 7 ) = 0;
A( 2, 8 ) = 0;
A( 3, 1 ) = 0;
A( 3, 2 ) = 0;
A( 3, 3 ) = 0;
A( 3, 4 ) = 0;
A( 3, 5 ) = 0;
A( 3, 6 ) = 0;
A( 3, 7 ) = 1;
A( 3, 8 ) = 0;
A( 4, 1 ) = 0;
A( 4, 2 ) = 0;
A( 4, 3 ) = 0;
A( 4, 4 ) = 0;
A( 4, 5 ) = 0;
A( 4, 6 ) = 0;
A( 4, 7 ) = 0;
A( 4, 8 ) = 1;
A( 5, 1 ) = 0;
A( 5, 2 ) = 0;
A( 5, 3 ) = 0;
A( 5, 4 ) = r_mp^2*Kf2*Mc/(2*Mc*r_mp^2*Mf2+Jm*Kg^2*Mf2+Jm*Kg^2*Mc);
A( 5, 5 ) = -(r_mp^2*Mf2*Mc*Eff_g*Kg^2*Eff_m*Kt*Km+Jm*Kg^4*Mc*Eff_g*Eff_m*Kt*Km+Jm*Kg^2*Mc*Beq*Rm*r_mp^2+r_mp^4*Mf2*Mc*Beq*Rm+Jm*Kg^4*Mf2*Eff_g*Eff_m*Kt*Km+Jm*Kg^2*Mf2*Beq*Rm*r_mp^2)/Rm/Jm/Kg^2/(2*Mc*r_mp^2*Mf2+Jm*Kg^2*Mf2+Jm*Kg^2*Mc);
A( 5, 6 ) = Mc*r_mp^2*Mf2*(Eff_g*Kg^2*Eff_m*Kt*Km+Beq*Rm*r_mp^2)/Rm/Jm/Kg^2/(2*Mc*r_mp^2*Mf2+Jm*Kg^2*Mf2+Jm*Kg^2*Mc);
A( 5, 7 ) = 0;
A( 5, 8 ) = 0;
A( 6, 1 ) = 0;
A( 6, 2 ) = 0;
A( 6, 3 ) = 0;
A( 6, 4 ) = r_mp^2*Kf2*Mc/(2*Mc*r_mp^2*Mf2+Jm*Kg^2*Mf2+Jm*Kg^2*Mc);
A( 6, 5 ) = Mc*r_mp^2*Mf2*(Eff_g*Kg^2*Eff_m*Kt*Km+Beq*Rm*r_mp^2)/Rm/Jm/Kg^2/(2*Mc*r_mp^2*Mf2+Jm*Kg^2*Mf2+Jm*Kg^2*Mc);
A( 6, 6 ) = -(r_mp^2*Mf2*Mc*Eff_g*Kg^2*Eff_m*Kt*Km+Jm*Kg^4*Mc*Eff_g*Eff_m*Kt*Km+Jm*Kg^2*Mc*Beq*Rm*r_mp^2+r_mp^4*Mf2*Mc*Beq*Rm+Jm*Kg^4*Mf2*Eff_g*Eff_m*Kt*Km+Jm*Kg^2*Mf2*Beq*Rm*r_mp^2)/Rm/Jm/Kg^2/(2*Mc*r_mp^2*Mf2+Jm*Kg^2*Mf2+Jm*Kg^2*Mc);
A( 6, 7 ) = 0;
A( 6, 8 ) = 0;
A( 7, 1 ) = 0;
A( 7, 2 ) = 0;
A( 7, 3 ) = -1/Mf1*Kf1;
A( 7, 4 ) = 1/Mf1*Kf2;
A( 7, 5 ) = 0;
A( 7, 6 ) = 0;
A( 7, 7 ) = 0;
A( 7, 8 ) = 0;
A( 8, 1 ) = 0;
A( 8, 2 ) = 0;
A( 8, 3 ) = 1/Mf1*Kf1;
A( 8, 4 ) = -Kf2*(Mf1*Jm*Kg^2+2*Mf1*Mc*r_mp^2+2*Mc*r_mp^2*Mf2+Jm*Kg^2*Mf2+Jm*Kg^2*Mc)/Mf1/(2*Mc*r_mp^2*Mf2+Jm*Kg^2*Mf2+Jm*Kg^2*Mc);
A( 8, 5 ) = Mc*(Eff_g*Kg^2*Eff_m*Kt*Km+Beq*Rm*r_mp^2)/Rm/(2*Mc*r_mp^2*Mf2+Jm*Kg^2*Mf2+Jm*Kg^2*Mc);
A( 8, 6 ) = Mc*(Eff_g*Kg^2*Eff_m*Kt*Km+Beq*Rm*r_mp^2)/Rm/(2*Mc*r_mp^2*Mf2+Jm*Kg^2*Mf2+Jm*Kg^2*Mc);
A( 8, 7 ) = 0;
A( 8, 8 ) = 0;

B( 1, 1 ) = 0;
B( 1, 2 ) = 0;
B( 2, 1 ) = 0;
B( 2, 2 ) = 0;
B( 3, 1 ) = 0;
B( 3, 2 ) = 0;
B( 4, 1 ) = 0;
B( 4, 2 ) = 0;
B( 5, 1 ) = r_mp*Eff_g/Kg*Eff_m*Kt*(Mc*r_mp^2*Mf2+Jm*Kg^2*Mc+Jm*Kg^2*Mf2)/Rm/Jm/(2*Mc*r_mp^2*Mf2+Jm*Kg^2*Mf2+Jm*Kg^2*Mc);
B( 5, 2 ) = -r_mp^3*Mf2*Mc*Eff_g/Kg*Eff_m*Kt/Rm/Jm/(2*Mc*r_mp^2*Mf2+Jm*Kg^2*Mf2+Jm*Kg^2*Mc);
B( 6, 1 ) = -r_mp^3*Mf2*Mc*Eff_g/Kg*Eff_m*Kt/Rm/Jm/(2*Mc*r_mp^2*Mf2+Jm*Kg^2*Mf2+Jm*Kg^2*Mc);
B( 6, 2 ) = r_mp*Eff_g/Kg*Eff_m*Kt*(Mc*r_mp^2*Mf2+Jm*Kg^2*Mc+Jm*Kg^2*Mf2)/Rm/Jm/(2*Mc*r_mp^2*Mf2+Jm*Kg^2*Mf2+Jm*Kg^2*Mc);
B( 7, 1 ) = 0;
B( 7, 2 ) = 0;
B( 8, 1 ) = -Mc*Eff_g*Kg*Eff_m*Kt*r_mp/Rm/(2*Mc*r_mp^2*Mf2+Jm*Kg^2*Mf2+Jm*Kg^2*Mc);
B( 8, 2 ) = -Mc*Eff_g*Kg*Eff_m*Kt*r_mp/Rm/(2*Mc*r_mp^2*Mf2+Jm*Kg^2*Mf2+Jm*Kg^2*Mc);

C( 1, 1 ) = 1;
C( 1, 2 ) = 0;
C( 1, 3 ) = 0;
C( 1, 4 ) = 0;
C( 1, 5 ) = 0;
C( 1, 6 ) = 0;
C( 1, 7 ) = 0;
C( 1, 8 ) = 0;
C( 2, 1 ) = 0;
C( 2, 2 ) = 1;
C( 2, 3 ) = 0;
C( 2, 4 ) = 0;
C( 2, 5 ) = 0;
C( 2, 6 ) = 0;
C( 2, 7 ) = 0;
C( 2, 8 ) = 0;
C( 3, 1 ) = 0;
C( 3, 2 ) = 0;
C( 3, 3 ) = -1/Mf1*Kf1;
C( 3, 4 ) = 1/Mf1*Kf2;
C( 3, 5 ) = 0;
C( 3, 6 ) = 0;
C( 3, 7 ) = 0;
C( 3, 8 ) = 0;
C( 4, 1 ) = 0;
C( 4, 2 ) = 0;
C( 4, 3 ) = 1/Mf1*Kf1;
C( 4, 4 ) = -Kf2*(Mf1*Jm*Kg^2+2*Mf1*Mc*r_mp^2+2*Mc*r_mp^2*Mf2+Jm*Kg^2*Mf2+Jm*Kg^2*Mc)/Mf1/(2*Mc*r_mp^2*Mf2+Jm*Kg^2*Mf2+Jm*Kg^2*Mc);
C( 4, 5 ) = Mc*(Eff_g*Kg^2*Eff_m*Kt*Km+Beq*Rm*r_mp^2)/Rm/(2*Mc*r_mp^2*Mf2+Jm*Kg^2*Mf2+Jm*Kg^2*Mc);
C( 4, 6 ) = Mc*(Eff_g*Kg^2*Eff_m*Kt*Km+Beq*Rm*r_mp^2)/Rm/(2*Mc*r_mp^2*Mf2+Jm*Kg^2*Mf2+Jm*Kg^2*Mc);
C( 4, 7 ) = 0;
C( 4, 8 ) = 0;

D( 1, 1 ) = 0;
D( 1, 2 ) = 0;
D( 2, 1 ) = 0;
D( 2, 2 ) = 0;
D( 3, 1 ) = 0;
D( 3, 2 ) = 0;
D( 4, 1 ) = -Mc*Eff_g*Kg*Eff_m*Kt*r_mp/Rm/(2*Mc*r_mp^2*Mf2+Jm*Kg^2*Mf2+Jm*Kg^2*Mc);
D( 4, 2 ) = -Mc*Eff_g*Kg*Eff_m*Kt*r_mp/Rm/(2*Mc*r_mp^2*Mf2+Jm*Kg^2*Mf2+Jm*Kg^2*Mc);
